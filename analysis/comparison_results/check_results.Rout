
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

R ist ein Gemeinschaftsprojekt mit vielen Beitragenden.
Tippen Sie 'contributors()' für mehr Information und 'citation()',
um zu erfahren, wie R oder R packages in Publikationen zitiert werden können.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> library(xts)
Lade nötiges Paket: zoo

Attache Paket: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> # working dir
> setwd("/mnt/scratch/users/stud06/tpilz/LUMP_paper/analysis/comparison_results/")
> 
> # R object with collected simulation data
> dat <- "../collect_results/alldat_Bengue_inflow_m3s_xts.Rdata"
> 
> # expected length of data vectors
> dat_len <- length(seq.Date(as.Date("2001-01-01"), as.Date("2013-12-31"), by="day"))
> 
> # range of accepted data values (values smaller or larger will be reported)
> val_range <- c(0,500)
> 
> # runs (i.e. list element names) expected to be within the data object
> params <- list(
+   thresh_sub =  c(1000, # 57 subbasins
+                   2000, # 20 subbasins
+                   5000, # 10 subbasins
+                   10000, # 7 subbasins
+                   30000), # 1 subbasin
+   eha_thres =  c(25, # 826 EHAs (many are discarded for being too small, having not enough sample points)
+                  50, # 1132 EHAs
+                  100, # 906 EHAs
+                  200, # 530 EHAs
+                  #300, # 352 EHAs
+                  500, # 220 EHAs
+                  750, # 147 EHAs
+                  1000), # 115 EHAs
+   no_LUs = c(5,10,20,50,75,100,150,200,250,300),
+   no_atts = c(1:7),
+   cTC1 = c(1:5)
+ )
> combinations <- expand.grid(params)
> run_names <-   dbname <- paste0("lump_paper", "_s", combinations$thresh_sub, "_eha", combinations$eha_thres, 
+                                 "_lunum", combinations$no_LUs, "_luatts", combinations$no_atts,
+                                 "_tc", combinations$cTC1) 
> 
> ### CALCULATIONS ###
> 
> # load data
> load(dat)
> 
> # check run_names within data and store those that could not be found for report
> names_na <- run_names[!(run_names %in% names(dat_all))]
> 
> # check lengths of data vectors
> len_err <- sapply(dat_all, function(x) length(x) != dat_len)
> len_err <- which(len_err)
> 
> # identify non finite (NA etc.) values
> nas <- sapply(dat_all, function(x) which(!is.finite(x)))
> nas <- nas[lapply(nas, length) > 0]
> 
> # out-of-range values
> outofrange_min <- sapply(dat_all, function(x) which(x < val_range[1]))
> outofrange_min <- outofrange_min[lapply(outofrange_min, length) > 0]
> 
> outofrange_max <- sapply(dat_all, function(x) which(x > val_range[2]))
> outofrange_max <- outofrange_max[lapply(outofrange_max, length) > 0]
> 
> 
> # REPORT #
> message("SHORT REPORT ON DATA CHECKS (analyse R objects for more information):\n", 
+         "\n",
+         "Runs expected but not within dataset: ", length(names_na), " of ", length(run_names),
+         "\n",
+         "Runs with length of data vectors not as expected: ", length(len_err), " of ", ncol(dat_all),
+         "\n",
+         "Runs with non finite values: ", length(nas), " of ", ncol(dat_all),
+         "\n",
+         "Runs with values smaller expected value range: ", length(outofrange_min), " of ", ncol(dat_all),
+         "\n",
+         "Runs with values larger expected value range: ", length(outofrange_max), " of ", ncol(dat_all))
SHORT REPORT ON DATA CHECKS (analyse R objects for more information):

Runs expected but not within dataset: 0 of 12250
Runs with length of data vectors not as expected: 0 of 12250
Runs with non finite values: 0 of 12250
Runs with values smaller expected value range: 0 of 12250
Runs with values larger expected value range: 0 of 12250
> 
> if (length(names_na)>0) {
+ 	write.table(data.frame(runs_na=names_na), "runs_missing.log", row.names=F, quote=F, sep="\t")
+ }
> 	
> 
> proc.time()
       User      System verstrichen 
     23.884       3.025      35.530 
